name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Testing for app
      run: npm test

    - name: Build Docker image
      run: docker build -t sample-app .

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: frengkysorituamanurung/sample-app:latest

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    
    - name: Add DigitalOcean droplet to known hosts
      run: ssh-keyscan -H -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts
    
    - name: Test SSH connection
      run: ssh -i .ssh/id_rsa -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_HOST }} 'echo "SSH connection successful!"'

    - name: Deploy to DigitalOcean Droplet
      if: github.ref == 'refs/heads/main'
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_HOST }} '
        docker pull frengkysorituamanurung/sample-app:latest &&
        docker run -d -p 80:3000 --name sample-app frengkysorituamanurung/sample-app:latest'
  
 