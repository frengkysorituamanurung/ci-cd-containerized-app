name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Testing for app
      run: npm test

    - name: Build Docker image
      run: docker build -t sample-app .

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: frengkysorituamanurung/sample-app:latest
    
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            # Update and install Docker if it's not installed
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker

            # Docker login to pull the image from DockerHub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            # Pull the latest Docker image
            docker pull frengkysorituamanurung/sample-app:latest

            # Stop and remove the existing container if it's running
            docker stop myapp || true
            docker rm myapp || true

            # Run the new container
            docker run -d -p 80:80 --name myapp frengkysorituamanurung/sample-app:latest
s           sh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} '
            # Update the system and install Docker if not installed
            if ! [ -x "$(command -v docker)" ]; then
              echo "Docker not found, installing..."
              sudo apt-get update &&
              sudo apt-get install -y docker.io &&
              sudo systemctl start docker &&
              sudo systemctl enable docker
            else
              echo "Docker already installed."
            fi

            # Pull the latest Docker image from registry
            docker pull frengkysorituamanurung/sample-app:latest


            # Run the new Docker container
            docker run -d --name sample-app -p 80:80 frengkysorituamanurung/sample-app:latest
          '