name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Testing for app
      run: npm test

    - name: Build Docker image
      run: docker build -t sample-app .

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
          push: true
          tags: frengkysorituamanurung/sample-app:latest
    
    - name: Generate SSH Key
      run: |
        ssh-keygen -t rsa -b 4096 -f my_key -N ""
        cat my_key.pub
    
    - name: Add SSH Key to Droplet
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        password: ${{ secrets.DROPLET_PASSWORD }}
        port: 22
        script: |
          mkdir -p ~/.ssh
          echo "${{ steps.generate_ssh_key.outputs.key }}" >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
    
    - name: Deploy to Droplet
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        key: ./my_key
        port: 22
        script: |
          # Install Docker if not present
          if ! [ -x "$(command -v docker)" ]; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
          fi
          # Pull the latest Docker image and run it
          docker pull frengkysorituamanurung/sample-app:latest
          docker stop sample-app || true
          docker rm sample-app || true
          docker run -d --name sample-app -p 80:80 frengkysorituamanurung/sample-app:latest
  
    